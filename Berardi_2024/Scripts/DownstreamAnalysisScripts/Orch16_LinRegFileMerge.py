from ftplib import FTP
import gzip
import re
import sys
import copy
import os
import subprocess
import math
import statistics
import random
import pysam
from scipy.stats import hypergeom
from scipy.stats import kstest
from scipy.stats import ks_2samp
from sympy import symbols
from sympy.solvers import solve

#this script merges the linear regression results with the matched SNP files generated by "Orch16_RegionInversionFreq.py"

#takes chromosome as argument
chrom = sys.argv[1]

linregfile = "Orch16_ThreeTimepoint_LinRegBetas_"+chrom+".txt"

linregdict = {}

with open(linregfile, "r") as file:
	#ROWNUM,CHROM,POS,BETA
	count = 0
	for line in file:
		if count>0:
			l = line.strip("\n").split(" ")
			key = (l[1],int(l[2]))
			entry = float(l[3])
			linregdict.update({key:entry})
		count+=1

match100file = "MatchedSNPs_100Groups_Orch16_"+chrom+".txt"
matchdict = {}

with open(match100file, "r") as file:
	#SAMP,HITCHROM,HITPOS,MATCHCHROM,MATCHPOS
	count = 0
	for line in file:
		if count>0:
			l = line.strip("\n").split("\t")
			#HCHROM,HPOS,SAMPNUM
			key = (l[1],int(l[2]),int(l[0]))

			if key in matchdict.keys():
				samp = matchdict[key]
				samp.append((l[3],int(l[4])))
				matchdict.update({key:samp})
			else:
				samp = [(l[3],int(l[4]))]
				matchdict.update({key:samp})
		count+=1

groupfile = "GroupPermutations_Orch16_"+chrom+".txt"
groupdict = {}
hitlist = []

with open(groupfile, "r") as file:
	#GROUP,HITCHROM,HITPOS,MATCHCHROM,MATCHPOS
	count = 0
	for line in file:
		if count>0:
			l = line.strip("\n").split("\t")
			groupnum = int(l[0])
			if groupnum in groupdict.keys():
				group = groupdict[groupnum]
				group.append((l[3],int(l[4])))
				groupdict.update({groupnum:group})
			else:
				group = [(l[3],int(l[4]))]
				groupdict.update({groupnum:group})

			hit = (l[1],int(l[2]))
			if not hit in hitlist:
				hitlist.append(hit)
		count+=1

groupoutfile = "GroupPermutations_LinRegBetas_Orch16_"+chrom+".txt"
matchoutfile = "MatchedSNPs_100Groups_LinRegBetas_Orch16_"+chrom+".txt"
hitfile = "GroupHits_LinRegBetas_Orch16_"+chrom+".txt"

with open(groupoutfile, "w") as wfile:
	wfile.write("GROUP\tCHROM\tPOS\tBETA\n")
	for groupnum in groupdict.keys():
		group = groupdict[groupnum]
		for snp in group:
			beta = linregdict[snp]
			wfile.write(str(groupnum)+"\t"+str(snp[0])+"\t"+str(snp[1])+"\t"+str(beta)+"\n")

with open(matchoutfile, "w") as wfile:
	wfile.write("SAMP\tHITCHROM\tHITPOS\tTYPE\tCHROM\tPOS\tBETA\n")
	for samp in matchdict.keys():
		snp = (samp[0],samp[1])
		beta = linregdict[snp]
		wfile.write(str(samp[2])+"\t"+str(samp[0])+"\t"+str(samp[1])+"\t"+"hit"+"\t"+str(snp[0])+"\t"+str(snp[1])+"\t"+str(beta)+"\n")
		group = matchdict[samp]
		for snp in group:
			beta = linregdict[snp]
			wfile.write(str(samp[2])+"\t"+str(samp[0])+"\t"+str(samp[1])+"\t"+"matched"+"\t"+str(snp[0])+"\t"+str(snp[1])+"\t"+str(beta)+"\n")

with open(hitfile, "w") as wfile:
	wfile.write("GROUP\tCHROM\tPOS\tBETA\n")
	for hit in hitlist:
		wfile.write("hit\t"+str(hit[0])+"\t"+str(hit[1])+"\t"+str(linregdict[hit])+"\n")